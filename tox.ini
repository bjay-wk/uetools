[tox]
envlist = py{38,39,310,311,312}-{linux,macos}


[gh-actions]
python =
    3.8: py38
    3.9: py39
    3.10: py310
    3.11: py311
    3.12: py312
    pypy3: pypy3

[gh-actions:env]
PLATFORM =
    ubuntu-latest: linux
    macos-latest: macos
    windows-latest: windows


# Testing
# =============================================================================

[testenv]
description = Run tests with coverage with pytest under current Python env
usedevelop = true
setenv = COVERAGE_FILE=.coverage_{envname}
passenv = CI
deps =
    -rtests/requirements.txt
    coverage
commands =
    pip install -e '.[all]'
    coverage run --source=uetools --parallel-mode -m pytest --doctest-modules --ignore=extracted --ignore=uetools/commands/project/templates/Docs/ --durations=50 --durations-min 1 -vv --timeout=700 {posargs}
    coverage combine
    coverage report -i -m
    coverage xml --omit=*/templates/*

[testenv:final-coverage]
description = Combine coverage data across environments (run after tests)
skip_install = True
setenv = COVERAGE_FILE=.coverage
passenv = {[testenv]passenv}
deps = coverage
commands =
    coverage erase
    coverage combine
    coverage report -m
    coverage xml --omit=*/templates/*

[testenv:codecov]
description = Upload coverage data to codecov (only run on CI)
setenv =
    {[testenv:final-coverage]setenv}
passenv = {[testenv]passenv}
deps = codecov
commands = codecov --required

# -----------------------------------------------------------------------------
# Linting
# =============================================================================

[testenv:checks]
description = Verify code style with pre-commit hooks.
basepython = python3
skip_install = true
deps =
    ruff
commands =
    ruff --fix .

[testenv:pylint] # Will use the configuration file `.pylintrc` automatically
description = Perform static analysis and output code metrics
basepython = python3
skip_install = false
deps =
    pylint
commands =
    pip install -e '.[all]'
    pylint uetools

[testenv:doc8]
description = Impose standards on *.rst documentation files
basepython = python3
skip_install = true
deps =
    -rdocs/requirements.txt
    doc8 == 0.8.*
commands =
    doc8 --max-line-length 120 --ignore-path docs/requirements.txt docs/

[testenv:docs]
description = Invoke sphinx to build documentation and API reference
basepython = python3
deps =
    -rdocs/requirements.txt
commands =
    sphinx-build -b html -d build/doctrees -nWT docs/ docs/build/html

# -----------------------------------------------------------------------------

# -----------------------------------------------------------------------------
# Deployment
# =============================================================================

[testenv:packaging]
description = Check whether README.rst is reST and missing from MANIFEST.in
basepython = python3
deps =
    check-manifest
    readme_renderer
commands =
    check-manifest --ignore .git
    python setup.py check -r -s

[testenv:build]
basepython = python3
skip_install = true
deps =
    wheel
    setuptools
commands =
    python setup.py -q sdist bdist_wheel


# Tool Configuration
# =============================================================================

# Pytest configuration
[pytest]
addopts = -ra -q --color=yes
norecursedirs = .* *.egg* config docs dist build
xfail_strict = True

# Coverage configuration
[coverage:run]
branch = True
source =
    uetools
    tests
omit = **/_[a-zA-Z0-9]*.py

# -----------------------------------------------------------------------------
